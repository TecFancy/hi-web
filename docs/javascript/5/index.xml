<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>基本引用类型 on Hi Web</title><link>https://hi-web.io/docs/javascript/5/</link><description>Recent content in 基本引用类型 on Hi Web</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="https://hi-web.io/docs/javascript/5/index.xml" rel="self" type="application/rss+xml"/><item><title>Date</title><link>https://hi-web.io/docs/javascript/5/5.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hi-web.io/docs/javascript/5/5.1/</guid><description>Date # ECMAScript 的 Date 类型参考了 Java 早期版本中的 java.util.Date。为此，Date 类型将日期保存为自协调世界时（UTC，Universal Time Coordinated）时间 1970 年 1 月 1 日午夜（零时）至今所经过的毫秒数。使用这种存储格式，Date 类型可以精确表示 1970 年 1 月 1 日之前及之后 285 616 年的日期。
要创建日期对象，就使用 new 操作符来调用 Date 构造函数：
let now = new Date(); 在不给 Date 构造函数传参数的情况下，创建的对象将保存当前日期和时间。要基于其他日期和时间创建日期对象，必须传入其毫秒表示（UNIX 纪元 1970 年 1 月 1 日午夜之后的毫秒数）。ECMAScript 为此提供了两个辅助方法：Date.parse()和 Date.UTC()。
Date.parse()方法接收一个表示日期的字符串参数，尝试将这个字符串转换为表示该日期的毫秒数。ECMA-262 第 5 版定义了 Date.parse()应该支持的日期格式，填充了第 3 版遗留的空白。所有实现都必须支持下列日期格式：
“月/日/年”，如&amp;quot;5/23/2019&amp;quot;； “月名 日, 年”，如&amp;quot;May 23, 2019&amp;quot;； “周几 月名 日 年 时:分:秒 时区”，如&amp;quot;Tue May 23 2019 00:00:00 GMT-0700&amp;quot;； ISO 8601 扩展格式“YYYY-MM-DDTHH:mm:ss.</description></item></channel></rss>